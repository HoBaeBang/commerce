openapi: 3.0.0
info:
  title: Commerce Project API
  description: 상품 조회, 검색, 주문 및 결제 기능을 제공하는 API
  version: 1.0.0
  contact:
    name: DEV
    email: aslanhobae@gmail.com

servers:
  - url: https://commerce.aslan.com/api/v1
    description: 운영 서버
  - url: http://localhost:8080/api/v1
    description: 로컬 환경

tags:
  - name: 상품
    description: 상품 관련 API
  - name: 주문&결제
    description: 주문 및 결제 관련 API
  - name: 결제
    description: 카카오페이 결제 관련 API

paths:
  /products:
    get:
      tags:
        - 상품
      summary: 상품 리스트 조회 및 검색
      description: 상품 리스트를 조회하거나 검색합니다. 키워드를 입력하면 검색 기능으로 작동합니다. length를 통해 페이지당 상품수를 설정할 수 있고 1~20까지의 값을 가질 수 있고 기본크기는 10입니다.
      parameters:
        - name: keyword
          in: query
          description: 검색 키워드
          required: false
          schema:
            type: string
            maxLength: 255
          example: iPhone 16
        - name: start
          in: query
          description: Row 시작
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
          example: 1
        - name: length
          in: query
          description: Row 수(기본값 10)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 20
            default: 10
          example: 10
        - name: minPrice
          in: query
          description: 최소 가격
          required: false
          schema:
            type: integer
            minimum: 0
          example: 10000
        - name: maxPrice
          in: query
          description: 최대 가격
          required: false
          schema:
            type: integer
          example: 50000
        - name: sort
          in: query
          description: 정렬 방식 (asc, desc)
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          example: asc
      responses:
        '200':
          description: 성공적으로 상품 목록을 조회함
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListResponse'
        '400':
          description: 잘못된 요청 파라미터
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidKeywordLength:
                  value:
                    error_code: INVALID_KEYWORD_LENGTH
                    error_message: "Keyword length must not exceed 255 characters"
                invalidPriceRange:
                  value:
                    error_code: INVALID_PRICE_RANGE
                    error_message: "최소 가격은 최대 가격보다 클 수 없습니다."
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /products/{productId}:
    get:
      tags:
        - 상품
      summary: 상품 상세 조회
      description: 상품 ID로 상세 정보를 조회합니다.
      parameters:
        - name: productId
          in: path
          description: 조회할 상품 ID
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: 성공적으로 상품 상세 정보를 조회함
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
        '404':
          description: 존재하지 않는 상품
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                productNotFound:
                  value:
                    error_code: PRODUCT_NOT_FOUND
                    error_message: "해당 ID의 상품을 찾을 수 없습니다."
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orders:
    post:
      tags:
        - 주문&결제
      summary: 주문 생성
      description: 새로운 주문을 생성합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
            example:
              items:
                - productId: 1
                  quantity: 2
                - productId: 2
                  quantity: 1
              shippingZipcode: "12345"
              shippingAddress: "서울시 강남구 테헤란로 123"
              shippingAddressDetail: "456동 789호"
              receiverName: "홍길동"
              receiverPhone: "010-1234-5678"
              memo: "부재시 경비실에 맡겨주세요"
      responses:
        '201':
          description: 주문이 성공적으로 생성됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: 잘못된 요청 데이터
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orders/{orderId}:
    get:
      tags:
        - 주문&결제
      summary: 주문 조회
      description: 특정 주문의 상세 정보를 조회합니다.
      parameters:
        - name: orderId
          in: path
          description: 주문 ID
          required: true
          schema:
            type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: 성공적으로 주문 정보를 조회함
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '404':
          description: 존재하지 않는 주문
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orders/{orderId}/cancel:
    post:
      tags:
        - 주문&결제
      summary: 주문 취소
      description: 주문을 취소합니다.
      parameters:
        - name: orderId
          in: path
          description: 주문 ID
          required: true
          schema:
            type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: 주문이 성공적으로 취소됨
        '404':
          description: 존재하지 않는 주문
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /payments/ready:
    post:
      tags:
        - 결제
      summary: 카카오페이 결제 준비
      description: 주문 정보를 바탕으로 카카오페이 결제를 준비하고, 결제 페이지 URL을 반환합니다.
      parameters:
        - name: orderId
          in: query
          description: 결제를 진행할 주문의 ID
          required: true
          schema:
            type: string
          example: "uuid-order-1234"
        - name: itemName
          in: query
          description: 결제 상품명 (예: "상품A 외 2건")
          required: true
          schema:
            type: string
          example: "iPhone 16 외 1건"
        - name: totalAmount
          in: query
          description: 최종 결제 금액
          required: true
          schema:
            type: integer
          example: 53000
      responses:
        '200':
          description: 결제 준비 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KakaoPayReadyResponse'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 오류 또는 카카오페이 연동 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /payments/approve:
    post:
      tags:
        - 결제
      summary: 카카오페이 결제 승인
      description: 카카오페이 결제 성공 후 pg_token을 받아 최종 결제를 승인합니다.
      parameters:
        - name: orderId
          in: query
          description: 결제를 승인할 주문의 ID
          required: true
          schema:
            type: string
          example: "uuid-order-1234"
        - name: pgToken
          in: query
          description: 카카오페이에서 발급한 결제 승인 토큰
          required: true
          schema:
            type: string
          example: "pg_token_example_1234"
      responses:
        '200':
          description: 결제 승인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KakaoPayApproveResponse'
        '400':
          description: 잘못된 요청 또는 이미 처리된 주문
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 오류 또는 카카오페이 연동 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /payments/cancel:
    post:
      tags:
        - 결제
      summary: 카카오페이 결제 취소
      description: 진행된 결제를 취소합니다.
      parameters:
        - name: orderId
          in: query
          description: 결제를 취소할 주문의 ID
          required: true
          schema:
            type: string
          example: "uuid-order-1234"
        - name: cancelAmount
          in: query
          description: 취소할 금액
          required: true
          schema:
            type: integer
          example: 53000
      responses:
        '200':
          description: 결제 취소 성공
        '400':
          description: 잘못된 요청
        '500':
          description: 서버 오류 또는 카카오페이 연동 실패

  /payments/success:
    get:
      tags:
        - 주문&결제
      summary: 결제 성공 리다이렉트
      description: 카카오페이 결제 성공 시 리다이렉트되는 페이지입니다.
      parameters:
        - name: pg_token
          in: query
          description: PG 토큰
          required: true
          schema:
            type: string
        - name: partner_order_id
          in: query
          description: 주문 ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 결제 성공 페이지
          content:
            text/html:
              schema:
                type: string
              example: "결제가 성공적으로 완료되었습니다. 주문ID: 550e8400-e29b-41d4-a716-446655440000"

  /payments/cancel:
    get:
      tags:
        - 주문&결제
      summary: 결제 취소 리다이렉트
      description: 카카오페이 결제 취소 시 리다이렉트되는 페이지입니다.
      parameters:
        - name: partner_order_id
          in: query
          description: 주문 ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 결제 취소 페이지
          content:
            text/html:
              schema:
                type: string
              example: "결제가 취소되었습니다. 주문ID: 550e8400-e29b-41d4-a716-446655440000"

  /payments/fail:
    get:
      tags:
        - 주문&결제
      summary: 결제 실패 리다이렉트
      description: 카카오페이 결제 실패 시 리다이렉트되는 페이지입니다.
      parameters:
        - name: partner_order_id
          in: query
          description: 주문 ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 결제 실패 페이지
          content:
            text/html:
              schema:
                type: string
              example: "결제에 실패했습니다. 주문ID: 550e8400-e29b-41d4-a716-446655440000"

components:
  schemas:
    ProductListResponse:
      type: object
      properties:
        totalItems:
          type: integer
          description: 전체 상품 수
          example: 1256
        totalPages:
          type: integer
          description: 전체 페이지 수
          example: 63
        currentPage:
          type: integer
          description: 현재 페이지 번호
          example: 1
        products:
          type: array
          description: 상품 목록
          items:
            $ref: '#/components/schemas/ProductDetail'
        kakaopayReadyUrl:
          type: string
          description: 카카오페이 결제 페이지 URL
          example: 'https://pg-web.kakaopay.com/...'
        orderItems:
          type: array
          description: 주문 상품 목록
          items:
            type: object
            properties:
              productId:
                type: integer
                description: 상품 ID
                example: 1
              productName:
                type: string
                description: 상품명
                example: "iPhone 15"
              price:
                type: integer
                description: 상품 가격
                example: 15000
              quantity:
                type: integer
                description: 주문 수량
                example: 2

    ProductDetail:
      type: object
      properties:
        id:
          type: integer
          description: 상품 ID
          example: 1
        name:
          type: string
          description: 상품명
          example: "iPhone 15"
        price:
          type: integer
          description: 상품 가격
          example: 1500000
        imageUrl:
          type: string
          description: 상품 이미지 URL
          example: "https://example.com/iphone15.jpg"
        stockQuantity:
          type: integer
          description: 재고 수량
          example: 100
        kakaopayReadyUrl:
          type: string
          description: 카카오페이 결제 페이지 URL
          example: 'https://pg-web.kakaopay.com/...'
        orderItems:
          type: array
          description: 주문 상품 목록
          items:
            type: object
            properties:
              productId:
                type: integer
                description: 상품 ID
                example: 1
              productName:
                type: string
                description: 상품명
                example: "iPhone 15"
              price:
                type: integer
                description: 상품 가격
                example: 15000
              quantity:
                type: integer
                description: 주문 수량
                example: 2

    OrderRequest:
      type: object
      required:
        - items
        - shippingZipcode
        - shippingAddress
        - shippingAddressDetail
        - receiverName
        - receiverPhone
      properties:
        items:
          type: array
          description: 주문 상품 목록
          items:
            type: object
            required:
              - productId
              - quantity
            properties:
              productId:
                type: integer
                description: 상품 ID
                example: 1
              quantity:
                type: integer
                description: 주문 수량
                minimum: 1
                example: 2
        shippingZipcode:
          type: string
          description: 배송지 우편번호
          example: "12345"
        shippingAddress:
          type: string
          description: 배송지 기본 주소
          example: "서울시 강남구 테헤란로 123"
        shippingAddressDetail:
          type: string
          description: 배송지 상세 주소
          example: "456동 789호"
        receiverName:
          type: string
          description: 수령인 이름
          example: "홍길동"
        receiverPhone:
          type: string
          description: 수령인 전화번호
          example: "010-1234-5678"
        memo:
          type: string
          description: 배송 메모
          example: "부재시 경비실에 맡겨주세요"

    OrderResponse:
      type: object
      properties:
        orderId:
          type: string
          description: 주문 ID
          example: "550e8400-e29b-41d4-a716-446655440000"
        orderStatus:
          type: string
          enum: [PENDING, PAID, CANCELLED, PAYMENT_FAILED, PAYMENT_ERROR, EXPIRED]
          description: 주문 상태
          example: "PENDING"
        totalProductAmount:
          type: integer
          description: 상품 금액 합계
          example: 40000
        shippingAmount:
          type: integer
          description: 배송비
          example: 3000
        paymentAmount:
          type: integer
          description: 최종 결제 금액
          example: 43000
        paymentDueDate:
          type: string
          format: date-time
          description: 결제 마감 시간
          example: "2024-01-15T15:30:00"
        orderDate:
          type: string
          format: date-time
          description: 주문 일시
          example: "2024-01-15T15:00:00"
        items:
          type: array
          description: 주문 상품 목록
          items:
            type: object
            properties:
              productId:
                type: integer
                description: 상품 ID
                example: 1
              productName:
                type: string
                description: 상품명
                example: "iPhone 15"
              price:
                type: integer
                description: 상품 가격
                example: 15000
              quantity:
                type: integer
                description: 주문 수량
                example: 2
        kakaopayReadyUrl:
          type: string
          description: 카카오페이 결제 페이지 URL
          example: 'https://pg-web.kakaopay.com/...'

    KakaoPayReadyResponse:
      type: object
      properties:
        tid:
          type: string
          description: 결제 고유 번호
        next_redirect_pc_url:
          type: string
          description: PC 웹 결제 페이지 URL
        created_at:
          type: string
          description: 결제 준비 요청 시간
          format: date-time

    KakaoPayApproveResponse:
      type: object
      properties:
        aid:
          type: string
          description: 요청 고유 번호
        tid:
          type: string
          description: 결제 고유 번호
        cid:
          type: string
          description: 가맹점 코드
        partner_order_id:
          type: string
          description: 주문번호
        partner_user_id:
          type: string
          description: 회원 ID
        amount:
          type: object
          properties:
            total:
              type: integer
            tax_free:
              type: integer
            vat:
              type: integer
            point:
              type: integer
            discount:
              type: integer
        payment_method_type:
          type: string
          description: 결제 수단
        item_name:
          type: string
          description: 상품명
        item_code:
          type: string
          description: 상품 코드
        quantity:
          type: integer
          description: 상품 수량
        created_at:
          type: string
          description: 결제 준비 요청 시간
          format: date-time
        approved_at:
          type: string
          description: 결제 승인 시간
          format: date-time
        payload:
          type: string
          description: 결제 승인 요청에 대해 저장한 값

    ErrorResponse:
      type: object
      properties:
        error_code:
          type: string
          description: 에러 코드
          example: "PRODUCT_NOT_FOUND"
        error_message:
          type: string
          description: 에러 메시지
          example: "해당 ID의 상품을 찾을 수 없습니다."
        error_data:
          type: object
          description: 에러 관련 데이터
          additionalProperties: true